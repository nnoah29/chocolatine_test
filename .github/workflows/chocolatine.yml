name: chocolatine

on:
  push:
    branches-ignore:
    - "ga-ignore-*"
  pull_request:
    branches-ignore:
    - "ga-ignore-*"

env:
  MIRROR_URL: "git@github.com:EpitechPromo2028/B-DOP-200-COT-2-1-chocolatine-noah.toffa.git"
  EXECUTABLES: "a.out"

jobs:
  check_coding_style:
    name: Check Coding Style
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run coding style check
        run: |
          check.sh $(pwd) $(pwd)
      - name: coding style errors display
        run: |
          if [ -s "coding-style-reports.log" ]; then
            fichier="coding-style-reports.log"
            while IFS= read -r ligne; do
                IFS=':' read -ra valeurs <<< "$ligne"
                echo "::error title=${valeurs[2]#./} coding style error,file=${valeurs[0]},line=${valeurs[1]}::${valeurs[3]} "
            done < "$fichier"
            exit 1
          fi


  check_program_compilation:
    needs: check_coding_style
    name: "Checks compilation"
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
      - uses: actions/checkout@v4
      - id: check_program_compilation
        run: make
        timeout-minutes: 2
      - run: make clean
      - run: |
          IFS=','
          for x in $EXECUTABLES
            do
              if [ -z "$x" ]; then
                  exit 1
              fi
              if [ ! -f "$x" ]; then
                  exit 1
              fi
              if [ ! -x "$x" ]; then
                  exit 1
              fi
            done
          IFS=$OIFS

  run_tests:
    needs: check_program_compilation
    name: "Runs tests"
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
      - uses: actions/checkout@v4
      - id: run_tests
        run: make tests_run
        timeout-minutes: 2

  push_to_mirror:
    needs: run_tests
    name: "push to mirror"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}
